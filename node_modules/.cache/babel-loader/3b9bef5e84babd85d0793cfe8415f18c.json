{"ast":null,"code":"var _jsxFileName = \"/Users/sian/Desktop/Code_401/lab_29/storefront/src/components/Products.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction Products(props) {\n  //show a list of products from selected category\n  let productsHTML = [];\n\n  for (let i = 0; i < props.products.length; i++) {\n    const classes = useStyles();\n    if (props.products[i].category === props.currentCategory) productsHTML.push( /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"prodWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"prodName\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, props.products[i].name), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"prodImg\",\n      key: i,\n      src: props.products[i].imgURL,\n      alt: props.products[i].name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"prodDesc\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, props.products[i].description), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"prodPrice\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"Price: $\", props.products[i].price), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"prodStock\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Quantity in Stock: \", props.products[i].stock), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disableElevation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"ADD TO CART\"))))));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Products\"), productsHTML);\n} // connect() --> returns a function (assume it's called foo)\n// let foo = connect(mapStateToProps);\n// let connectedComponent = foo(Products)\n// export default connectedComponent\n\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products,\n    currentCategory: state.currentCategory\n  };\n};\n\nexport default connect(mapStateToProps)(Products);","map":{"version":3,"sources":["/Users/sian/Desktop/Code_401/lab_29/storefront/src/components/Products.js"],"names":["React","connect","Button","makeStyles","Grid","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Products","props","productsHTML","i","products","length","classes","category","currentCategory","push","name","imgURL","description","price","stock","mapStateToProps","state"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n\nfunction Products(props) {\n\n \n    //show a list of products from selected category\n    let productsHTML = [];\n    for (let i = 0; i < props.products.length; i++) {\n        const classes = useStyles();\n        if (props.products[i].category === props.currentCategory)\n            productsHTML.push(\n                <div className={classes.root}>\n         <Grid container spacing={1}>\n         <Grid item xs={5}> \n            <div className = \"prodWrapper\">\n            <h3 className=\"prodName\" key={i}>{props.products[i].name}</h3>\n            <img className=\"prodImg\" key={i} src={props.products[i].imgURL} alt={props.products[i].name} />\n            <p className=\"prodDesc\" key={i}>{props.products[i].description}</p>\n            <p className=\"prodPrice\" key={i}>Price: ${props.products[i].price}</p>\n            <p className=\"prodStock\" key={i}>Quantity in Stock: {props.products[i].stock}</p>\n            <Button variant=\"contained\" color=\"primary\" disableElevation>\n                ADD TO CART\n            </Button>\n            </div>\n        </Grid> \n      </Grid>\n            </div>\n\n            )}\n    return (\n        <>\n \n            <h2>Products</h2>       \n\n          {productsHTML}         \n\n  \n        \n\n        </>\n    );\n}\n\n// connect() --> returns a function (assume it's called foo)\n// let foo = connect(mapStateToProps);\n// let connectedComponent = foo(Products)\n// export default connectedComponent\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.products,\n        currentCategory: state.currentCategory,\n    };\n};\n\nexport default connect(mapStateToProps)(Products);"]},"metadata":{},"sourceType":"module"}