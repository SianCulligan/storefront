{"ast":null,"code":"var _jsxFileName = \"/Users/sian/Desktop/Code_401/lab_29/storefront/src/components/Products.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\n\nfunction Products(props) {\n  let productsHTML = []; // let productCategory = [];\n  // for (let i = 0; i < props.products.length; i++) {\n  // if (props.products[i].category === props.currentCategory)\n  //         productCategory.push(\n  //             <> \n  //              <p className=\"prodCat\" key={i}>{props.products[i].category}</p>\n  //             </>)}\n\n  for (let i = 0; i < props.products.length; i++) {\n    if (props.products[i].category === props.currentCategory) console.log('PRODUCTS', props.products[i].category);\n    productsHTML.push( /*#__PURE__*/React.createElement(React.Fragment, null));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Products\"), productsHTML);\n} // connect() --> returns a function (assume it's called foo)\n// let foo = connect(mapStateToProps);\n// let connectedComponent = foo(Products)\n// export default connectedComponent\n\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products,\n    currentCategory: state.currentCategory\n  };\n};\n\nexport default connect(mapStateToProps)(Products);","map":{"version":3,"sources":["/Users/sian/Desktop/Code_401/lab_29/storefront/src/components/Products.js"],"names":["React","connect","Button","Products","props","productsHTML","i","products","length","category","currentCategory","console","log","push","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,MAAIC,YAAY,GAAG,EAAnB,CADqB,CAErB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,QAAN,CAAeC,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC5C,QAAIF,KAAK,CAACG,QAAN,CAAeD,CAAf,EAAkBG,QAAlB,KAA+BL,KAAK,CAACM,eAAzC,EACAC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBR,KAAK,CAACG,QAAN,CAAeD,CAAf,EAAkBG,QAA1C;AAEIJ,IAAAA,YAAY,CAACQ,IAAb,eACI,yCADJ;AAWG;;AAEH,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGKR,YAHL,CADJ;AAOH,C,CAGT;AACA;AACA;AACA;;;AACA,MAAMS,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,QAAQ,EAAEQ,KAAK,CAACR,QADb;AAEHG,IAAAA,eAAe,EAAEK,KAAK,CAACL;AAFpB,GAAP;AAIH,CALD;;AAOA,eAAeT,OAAO,CAACa,eAAD,CAAP,CAAyBX,QAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\n\nfunction Products(props) {\n    let productsHTML = [];\n    // let productCategory = [];\n\n    // for (let i = 0; i < props.products.length; i++) {\n    // if (props.products[i].category === props.currentCategory)\n    //         productCategory.push(\n    //             <> \n    //              <p className=\"prodCat\" key={i}>{props.products[i].category}</p>\n    //             </>)}\n\n    for (let i = 0; i < props.products.length; i++) {\n        if (props.products[i].category === props.currentCategory)\n        console.log('PRODUCTS', props.products[i].category);\n\n            productsHTML.push(\n                <>\n            {/* <h3 className=\"prodName\" key={i}>{props.products[i].name}</h3>\n            <img className=\"prodImg\" src={props.products[i].imgURL} alt={props.products[i].name} key={i}/> \n            <p className=\"prodDesc\" key={i}>{props.products[i].description}</p>\n            <p className=\"prodPrice\" key={i}>Price: ${props.products[i].price}</p>\n            <p className=\"prodStock\" key={i}>Quantity in Stock: {props.products[i].stock}</p>\n            <Button variant=\"contained\" color=\"primary\" disableElevation>\n                ADD TO CART\n            </Button>  */}\n                </>\n            ) }\n    \n            return (\n                <>\n                    <h2>Products</h2>\n                    {/* {productCategory[0]} */}\n                    {productsHTML}\n                </>\n            );\n        }\n\n\n// connect() --> returns a function (assume it's called foo)\n// let foo = connect(mapStateToProps);\n// let connectedComponent = foo(Products)\n// export default connectedComponent\nconst mapStateToProps = (state) => {\n    return {\n        products: state.products,\n        currentCategory: state.currentCategory,\n    };\n};\n\nexport default connect(mapStateToProps)(Products);"]},"metadata":{},"sourceType":"module"}